Data Analysis Summary

            #another way of reading csv file beside pandas
            #import csv
            #f = open('C:/Users/jessiel/Desktop/Myself/Kaggle/label_categories.csv')
            #csv_f = csv.reader(f)
            #for row in csv_f:
            #  print row

import pandas as pd
1. event
df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/events.csv')
#print df
print len(df.event_id)
print len(df.event_id.unique())

Result:
3252950
3252950

print len(df.device_id)
print len(df.device_id.unique())

Result:
3252950
60865

Data Preprocesing:
Not necessary

2. app_event

df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/app_events.csv')
#print df
print len(df.app_id)
print len(df.app_id.unique())

Result: 
32473067
19237

print len(df.event_id)
print len(df.event_id.unique())

Result:
32473067
1488096

3. app_labels
df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/app_labels.csv')
#print df.head(10)
print len(df.app_id)
print len(df.app_id.unique())

Result:
459943
113211

Data Preprocessing:
df_uniq_app = df.drop_duplicates()
print len(df_uniq_app.app_id)
print len(df_uniq_app.app_id.unique())

Result:
459452
113211

Solution: remove only one duplicated row, since the app_id in this table is not primary key
(app_id and label_id can be used as composite PF), no need to do further clean up.

df_uniq_app.to_csv('app_labels_cleaned.csv')
df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/app_labels_cleaned.csv')
print len(df.app_id)

Result:
459452

Follow up processing: delete those rows which the id in app_label is not in label_category

df_label =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/app_labels_cleaned.csv')
df_category =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/label_categories_cleaned.csv')
#df = pd.merge(df_label,df_category, on = 'label_id')--- used to join two dataframe with same key
print df_label[df_label.label_id.isin(df_category.label_id)]
#print df_label[~df_label.label_id.isin(df_category.label_id)] --- used to get the opposte result: get rows in app_label which are not in label_category

Result:
456698

4. label_categories
df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/label_categories.csv')
#print df.head(10)
print len(df.label_id)
print len(df.label_id.unique())

Result:
930
930

Data Preprocessing: Remove lines which category = Null/Unknown
df_notNull = df[df.category.notnull()]
df_notNull_removeUnknown = df_notNull.loc[df_notNull.category != 'unknown']
df_notNull_removeUnknown.to_csv('label_categories_cleaned.csv')

Result:
print len(df_notNull) -------927
print len(df_notNull_removeUnknown) -------901
print len(df)  -----930
df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/label_categories_cleaned.csv')
print len(df) ------901

5. phone_brand_device_model
df =pd.read_csv('C:/Users/jessiel/Desktop/Myself/Kaggle/phone_brand_device_model.csv')
#print df.head(10)
print len(df.device_id)
print len(df.device_id.unique())

Result:
187245
186716

Data Preprocessing:
df_uniq_model = df.drop_duplicates()
print len(df_uniq_model.device_id)
print len(df_uniq_model.device_id.unique())

Result:
186722
186716

Solution: remove (186722- 186716)*2 = 12 lines of duplicated rows and save it as phone_brand_device_model_cleaned.csv file

#print df_uniq_model[(df_uniq_model.groupby('device_id').transform('count')>1).values].drop_duplicates() 
#print len(df_uniq_model[(df_uniq_model.groupby('device_id').transform('count')>1).values].drop_duplicates())
#the above sentence is used to find the 6 duplicated rows, totally 12 rows

df_final = df_uniq_model.drop_duplicates(subset = 'device_id',keep = False)
print len(df_final.device_id)
print len(df_final.device_id.unique())
df_final.to_csv('phone_brand_device_model_cleaned.csv')

Result: 
186710
186710

Combine training data all together
df_train = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/gender_age_train.csv')
df_event = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/events.csv')
df_app = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/app_labels_cleaned2.csv')
df_device = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/phone_brand_device_model_cleaned.csv')
df_test = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/gender_age_test.csv')
df_sample = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/sample_submission.csv')
df_app_event = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/app_events.csv')
df_label_category = pd.read_csv('C:/Users/jessiel/Desktop/Kaggle/label_categories_cleaned.csv')
#print df_app_event[df_app_event['is_installed'] == 0]
#print df_sample
#print df_event.dtypes

#print len(df_train.device_id.unique())
#print len(df_train.group.unique())

#print len(df[df.device_id.isin(df_device.device_id)])
#print len(df_train.device_id.isin(df_event.device_id))
#print df_train.device_id.isin(df_event.device_id)
#print len(df_event.device_id.isin(df_train.device_id))
df = pd.merge(df_train, df_event, on = 'device_id', how = 'inner')
#print df.head(20)
#print len(df.device_id.unique())
#print df.head(20)
df1 = pd.merge(df, df_app_event, on = 'event_id', how = 'inner')
#print df1.head(3)

df2 = pd.merge(df1, df_app, on = 'app_id', how = 'inner')

df3 = pd.merge(df2, df_label_category, on = 'label_id', how = 'inner')
print df3.head(10)

Appendix: Some other source code
(df_uniq_model = df.drop_duplicates()
#print df.drop_duplicates()
#print len(df.device_id)
#print len(df.device_id.unique())\
#print df_uniq_model.device_id.duplicated()

#df_dup_id = df_uniq_model.groupby(df_uniq_model.device_id).size()
df_dup_id = df_uniq_model.groupby(['device_id']).size())
